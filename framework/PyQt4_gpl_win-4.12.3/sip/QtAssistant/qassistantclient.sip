// qassistantclient.sip generated by MetaSIP
//
// This file is part of the QtAssistant Python extension module.
//
// Copyright (c) 2018 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QAssistantClient : QObject
{
%TypeHeaderCode
#include <qassistantclient.h>
%End

%ConvertToSubClassCode
    static struct class_graph {
            const char *name;
            sipTypeDef **type;
            int yes, no;
        } graph[] = {
            {sipName_QAssistantClient,	&sipType_QAssistantClient,	-1, -1},
        };
    
        int i = 0;
    
        sipType = 0;
    
        do
        {
            struct class_graph *cg = &graph[i];
    
            if (cg->name != NULL && sipCpp->inherits(cg->name))
            {
                sipType = *cg->type;
                i = cg->yes;
            }
            else
                i = cg->no;
        }
        while (i >= 0);
%End

public:
    QAssistantClient(const QString &path, QObject *parent /TransferThis/ = 0);
    virtual ~QAssistantClient();
    bool isOpen() const;
    void setArguments(const QStringList &arguments);

public slots:
    virtual void openAssistant() /ReleaseGIL/;
    virtual void closeAssistant();
    virtual void showPage(const QString &page);

signals:
    void assistantOpened();
    void assistantClosed();
    void error(const QString &message);
};
